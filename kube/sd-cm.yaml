apiVersion: v1
kind: ConfigMap
metadata:
  name: sd-cm
data:
  set_altibase.env: |
    export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.342.b07-1.el7_9.x86_64/jre
    export ALTIBASE_HOME=/home/altibase/altibase_home
    export ALTIBASE_NLS_USE=UTF8
    export ALTIBASE_PORT_NO=20300
    export ALTIBASE_REPLICATION_PORT_NO=20301
    export DB_INITSIZE=10 #init Memory DB Size (Mbyte)
    export DB_CHARSET=UTF8
    export DB_NATIONAL_CHARSET=UTF8
    export SYS_USER_ID=sys
    export SYS_USER_PASSWD=manager
    # DB_ARCH_MODE: "NOARCHIVELOG" or "ARCHIVELOG"
    export DB_ARCH_MODE="NOARCHIVELOG"
    export PATH=${ALTIBASE_HOME}/bin:${PATH}
    export LD_LIBRARY_PATH=${ALTIBASE_HOME}/lib:${LD_LIBRARY_PATH};
    export CLASSPATH=${ALTIBASE_HOME}/lib/Altibase.jar:${CLASSPATH};
    idx=${HOSTNAME##*-}
    export MYID=$(($idx + 1))
    export FQDN=$(hostname -f) #Fully Qualified Domain Name
    
  base_schema.sql: |
    drop table t1 cascade;
    drop table _bak_t1 cascade;
    create table t1(c1 int);
    
  entry_point.sh: |
    #!/bin/bash
    . /home/altibase/altibase_home/config_map/set_altibase.env
    cp ${ALTIBASE_HOME}/ZookeeperServer/config_map/zoo.cfg ${ALTIBASE_HOME}/ZookeeperServer/conf/zoo.cfg

    function db_create()
    {
        if [[ ! -f "${ALTIBASE_HOME}/dbs/system001.dbf" ]]
        then
            ADMIN="${ALTIBASE_HOME}/bin/isql -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -sysdba -noprompt"
            ${ADMIN} << EOF
                startup process;
                CREATE DATABASE mydb INITSIZE=${DB_INITSIZE}M ${DB_ARCH_MODE} CHARACTER SET ${DB_CHARSET} NATIONAL CHARACTER SET ${DB_NATIONAL_CHARSET};
                shutdown abort;
                quit
    EOF
        fi
    }
 
    prepare_main()
    {
        db_create
        server start
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/dbms_shard.sql
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/dbms_shard.plb
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/dbms_shard_get_diagnostics.sql
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/dbms_shard_get_diagnostics.plb
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/dbms_metadata.sql
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/dbms_metadata.plb
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/dbms_lock.sql
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/dbms_lock.plb

        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/config_map/base_schema.sql

        isql -silent -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -noprompt << EOF
            EXEC DBMS_SHARD.CREATE_META();
            EXEC DBMS_SHARD.SET_LOCAL_NODE(${MYID}, '${HOSTNAME}', '${FQDN}', ${ALTIBASE_PORT_NO}, '${FQDN}', ${ALTIBASE_PORT_NO}, '${FQDN}', ${ALTIBASE_REPLICATION_PORT_NO} );
    EOF
 
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/utl_shard_online_rebuild.sql
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -f ${ALTIBASE_HOME}/packages/utl_shard_online_rebuild.plb
        
        isql -silent -s 127.0.0.1 -u ${SYS_USER_ID} -p ${SYS_USER_PASSWD} -noprompt << EOF
            ALTER DATABASE SHARD ADD;
    EOF

        tail -f /dev/null
    }
 
    prepare_main $@
